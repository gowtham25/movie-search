{"version":3,"sources":["components/MovieDetails/MovieDetails.jsx","components/MovieList/Card.jsx","components/MovieList/MovieList.jsx","components/Search/SearchComponent.jsx","App.js","serviceWorker.js","index.js"],"names":["MovieDetailsContainer","styled","div","MovieDetails","movieData","useParams","id","useState","movieDetails","setMovieDetails","loading","setLoading","useEffect","fetch","then","data","json","Poster","Title","Actors","Year","Runtime","Genre","Director","Plot","Language","imdbRating","className","src","alt","CardContainer","withRouter","handleFavourite","props","Type","imdbID","isFavourite","key","onClick","history","push","MovieListContainer","NoResultContainer","MovieList","favourite","Response","Search","length","map","sVal","filter","fVal","SearchComponentContainer","SearchComponent","getData","searchText","setSearchText","searchType","setSearchType","type","value","onChange","e","target","AppComponentContainer","App","setMovieData","makeFavourite","dVal","to","path","exact","children","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6db94443.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport styled from 'styled-components';\n\nconst MovieDetailsContainer = styled.div`\n    background: #222323;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    .movie-detail-container {\n        display: flex;\n        flex-direction: row;\n        .movie-detail-image {\n            width: 300px;\n            height: 428px;\n        }\n        .details-container {\n            display: flex;\n            flex-direction: column;\n            align-items: baseline;\n            .people-details {\n                display: flex;\n                flex-direction: column;\n                align-items: baseline;\n                left: 7px;\n                margin-left: 9px;\n                margin-top: 14px;            \n            }\n            h1 {\n                font-weight: 300;\n                text-transform: capitalize;\n                color: #FFF;\n                font-size: 2rem;\n                font-family: Roboto,sans-serif;\n                margin-bottom: 0;\n                left: 8px;\n                position: relative;\n            }\n            .time-details {\n                font-weight: 400;\n                color: #9e9e9e;\n                font-size: 1rem;\n                padding: 0 8px;\n                line-height: 1.5rem;\n            }\n            .details-row, .about {\n                display: flex;\n                flex-direction: row;\n                align-items: baseline;\n                justify-content: center;\n                .row-header, .row-value {\n                    font-size: 17px;\n                    font-weight: 700;\n                    font-family: Roboto,sans-serif;\n                }\n                .row-header {\n                    margin-right: 3px;\n                    color: #9e9e9e;\n                }\n                .row-value {\n                    color: #d8272c;\n                }\n            }\n            .about {\n                display: flex;\n                flex-direction: column;\n                margin-left: 9px;\n                margin-top: 7px;\n                .plot-details {\n                    line-height: 1.5rem;\n                    font-size: 1rem;\n                    font-weight: 700;\n                    color: #FFF;\n                }\n            }\n        }\n    }\n    @media screen and (max-width: 1024px) {\n        padding: 13px;\n        height: 94vh;\n        .movie-detail-container { \n            display: flex;\n            flex-direction: column;\n            .movie-detail-image {\n                width: 200px;\n                height: 280px;\n            }\n        }\n    }\n    @media screen and (max-width: 700px) {\n        padding: 13px;\n        height: 94vh;\n        .movie-detail-container { \n            display: flex;\n            flex-direction: column;\n            .movie-detail-image {\n                width: 200px;\n                height: 280px;\n            }\n        }\n\t}\n`;\nconst MovieDetails = ({ movieData }) => {\n    const { id = '' } = useParams();\n    const [movieDetails, setMovieDetails] = useState({});\n    const [loading, setLoading] = useState(false);\n    useEffect(() => {\n        setLoading(true);\n        fetch(`http://www.omdbapi.com/?i=${id}&apikey=6001b816`)\n            .then(data => data.json())\n            .then(data => {\n                setMovieDetails(data);\n                setLoading(false);\n            })\n    }, [id]);\n    const { Poster = '', Title = '', Actors, Year, Runtime, Genre, Director, Plot, Language = '', imdbRating } = movieDetails || {};\n    return (\n        <MovieDetailsContainer>\n            {loading ? <p>Loading Please wait...</p> :\n                <div className='movie-detail-container'>\n                    <img src={Poster} alt={Title} className='movie-detail-image' />\n                    <div className='details-container'>\n                        {Title && <h1>{`${Title} - ${Language}`}</h1>}\n                        {Runtime && <div className='time-details'>\n                            <div>{`${Runtime}.${Year}`}</div>\n                        </div>}\n                        <div className='people-details'>\n                            {Director && <div className='details-row'>\n                                <div className='row-header'>Director: </div><div className='row-value'>{Director}</div>\n                            </div>}\n                            {Genre && <div className='details-row'>\n                                <div className='row-header'>Genre: </div><div className='row-value'>{Genre}</div>\n                            </div>}\n                            {Actors && <div className='details-row'>\n                                <div className='row-header'>Actors: </div><div className='row-value'>{Actors}</div>\n                            </div>}\n                        </div>\n                        {Plot && <div className='about'>\n                            <div className='row-header'>About</div>\n                            <div className='plot-details'>{Plot}</div>\n                        </div>}\n                        <div className='people-details'>\n                            {imdbRating && <div className='details-row'>\n                                <div className='row-header'>Rating: </div><div className='row-value'>{imdbRating}</div>\n                            </div>}\n                        </div>\n                    </div>\n                </div>}\n        </MovieDetailsContainer>\n    )\n}\n\nexport default MovieDetails;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst CardContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    .movie-title {\n        font-size: 20px;\n        color: #999;\n        font-weight: 400;\n        padding: 10px 0 0;\n        width: 100%;\n        transition: all .1s linear;\n        display: flex;\n        justify-content: center;\n        padding: 0px\n    }\n    .poster {\n        width: 200px;\n        height: 280px;\n    }\n    .details-container {\n        display: flex;\n        flex-direction: column;\n        .details-row {\n            display: flex;\n            flex-direction: row;\n            align-items: baseline;\n            justify-content: center;\n            .row-header, .row-value {\n                font-size: 17px;\n                font-weight: 700;\n                font-family: monospace;\n            }\n        }\n        button {\n            padding: 6px 15px;\n            color: #FFF;\n            border-radius: 10px;\n            outline: none;\n            border: none;\n            cursor: pointer;\n            font-size: 13px;\n            font-weight: bold;\n            &.not-favourite {\n                background: green;\n            }\n            &.favourite {\n                background: red; \n            }\n        }\n        .view-more-details {\n            font-size: 13px;\n            text-align: center;\n            font-weight: 700;\n            cursor: pointer;\n            color: #8282cb;\n        }\n    }\n`;\nconst Card = ({ data, handleFavourite, ...props }) => {\n    const { Poster, Title, Type, Year, imdbID, isFavourite = true } = data || {}\n    return (\n        <CardContainer key={imdbID}>\n            <h1 className='movie-title'>{Title}</h1>\n            <img src={Poster} alt={Title} className='poster' />\n            <div className='details-container'>\n                <div className='details-row'>\n                    <div className='row-header'>Type :</div><div className='row-value'>{Type}</div>\n                </div>\n                <div className='details-row'>\n                    <div className='row-header'>Release Date :</div><div className='row-value'>{Year}</div>\n                </div>\n                <button onClick={() => { handleFavourite(imdbID, !isFavourite) }} className={isFavourite ? 'favourite' : 'not-favourite'}>{isFavourite ? 'Remove Favourite' : 'Set As Favourite'}</button>\n                <span onClick={() => { props.history.push(`/movie-search/${imdbID}`) }} className='view-more-details'>View Movie Details</span>\n            </div>\n        </CardContainer>\n    )\n}\n\nexport default withRouter(Card);","import React from 'react';\nimport styled from 'styled-components';\nimport Card from './Card';\n\nconst MovieListContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\n    grid-gap: 10px;\n    padding-bottom: 10px;\n    @media screen and (max-width: 1024px) {\n        grid-template-columns: 1fr 1fr;\n    }\n    @media screen and (max-width: 700px) {\n\t\tgrid-template-columns: 1fr;\n\t}\n`;\n\nconst NoResultContainer = styled.div`\n    p {\n        text-align: center;\n        font-size: 17px;\n        font-weight: 700;\n        font-family: sans-serif;\n    }\n`;\nconst MovieList = ({ movieData, loading, handleFavourite, favourite }) => {\n    const { Response = true, Search = [] } = movieData || {}\n    return (\n        <>\n            <MovieListContainer>\n                {!favourite && !loading && Response && Search && Search.length > 0 && Search.map((sVal) => {\n                    const { imdbID = '' } = sVal || {};\n                    return <Card data={sVal} key={imdbID} handleFavourite={handleFavourite} />\n                })}\n                {favourite && !loading && Response && Search && Search.length > 0 && Search.filter((fVal) => fVal.isFavourite).map((sVal) => {\n                    const { imdbID = '' } = sVal || {};\n                    return <Card data={sVal} key={imdbID} handleFavourite={handleFavourite} />\n                })}\n            </MovieListContainer>\n            <NoResultContainer>\n                {(!loading && (!Response || !Search.length)) && <p>No Results Found...</p>}\n                {loading && <p>Loading Please Wait...</p>}\n            </NoResultContainer>\n        </>\n    )\n}\n\nexport default MovieList;","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst SearchComponentContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    .search-input-container {\n        .search-text {\n            width: 500px;\n            height: 30px;\n            outline: none;\n            padding-left: 11px;\n            font-size: 17px;\n            font-weight: 600;\n        }\n        .select-type {\n            height: 36px;\n            border-left: none;\n            outline: none;\n            width: 154px;\n            position: relative;    \n            top: -1px;\n        }\n    }\n    .search-button {\n        margin-left: 60px;\n        width: 150px;\n        cursor: pointer;\n        background: transparent;\n        outline: none;\n        border: 2px solid #CCC;\n        border-radius: 6px;\n    }\n    @media screen and (max-width: 1024px) {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n\t\t.search-input-container {\n            display: flex;\n            flex-direction: row;\n            width: 90%;\n            .search-text {\n                width: 70%;\n            }\n            .select-type {\n                width: 30%;\n                top: 0px;\n            }\n        }\n        .search-button {\n            height: 29px;\n            margin-top: 12px;\n            margin-left: -12px;        \n        }\n\t}\n    }\n    @media screen and (max-width: 700px) {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n\t\t.search-input-container {\n            display: flex;\n            flex-direction: row;\n            width: 90%;\n            .search-text {\n                width: 70%;\n            }\n            .select-type {\n                width: 30%;\n                top: 0px;\n            }\n        }\n        .search-button {\n            height: 29px;\n            margin-top: 12px;\n            margin-left: -12px;        \n        }\n\t}\n`;\nconst SearchComponent = ({ getData }) => {\n    const [searchText, setSearchText] = useState('');\n    const [searchType, setSearchType] = useState('');\n\n    return (\n        <SearchComponentContainer>\n            <div className='search-input-container'>\n                <input className='search-text' type='text' value={searchText} onChange={(e) => { setSearchText(e.target.value) }} />\n                <select value={searchType} className='select-type' onChange={(e) => { setSearchType(e.target.value) }}>\n                    <option value=''>All</option>\n                    <option value='movie'>Movies</option>\n                    <option value='series'>Series</option>\n                    <option value='episode'>Episodes</option>\n                </select>\n            </div>\n            <button className='search-button' onClick={() => { getData(searchText, searchType) }}>Search</button>\n        </SearchComponentContainer>\n    )\n}\n\nexport default SearchComponent;","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\nimport styled from 'styled-components';\nimport './App.css';\nimport MovieDetails from './components/MovieDetails/MovieDetails';\nimport MovieList from './components/MovieList/MovieList';\nimport SearchComponent from './components/Search/SearchComponent';\n\nconst AppComponentContainer = styled.div`\n\theader {\n\t\tposition: sticky;\n\t\ttop: 0;\n\t\tbackground: #FFF;\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\talign-items: center;\n\t\tjustify-content: space-between;\n\t\tpadding: 0 20px;\n\t\theight: 35px;\n\t\tborder: 1px solid #000;\n\t\ta {\n\t\t\tcolor: #000;\n\t\t\ttext-decoration: none;\n\t\t\t.home{\n\t\t\t\tfont-size: 16px;\n\t\t\t\tfont-weight: 700;\n\t\t\t\tcursor: pointer;\n\t\t\t}\n\t\t}\n\t}\n\t.App {\n\t\tmargin-top: 50px;\n\t}\n`;\nfunction App() {\n\tconst [movieData, setMovieData] = useState([]);\n\tconst [loading, setLoading] = useState(false);\n\n\tconst getData = (searchText, type) => {\n\t\tsetLoading(true);\n\t\tfetch(`http://www.omdbapi.com/?s=${searchText}&apikey=6001b816&y=${searchText}&type=${type}`)\n\t\t\t.then(data => data.json())\n\t\t\t.then(data => {\n\t\t\t\tconst { Search = [] } = data || {};\n\t\t\t\tconst makeFavourite = Search && Search.length > 0 && Search.map((dVal) => {\n\t\t\t\t\treturn { ...dVal, isFavourite: true }\n\t\t\t\t});\n\t\t\t\tsetMovieData({ ...data, Search: makeFavourite || [] });\n\t\t\t\tsetLoading(false);\n\t\t\t})\n\t}\n\n\tconst handleFavourite = (id, value) => {\n\t\tconst { Search = [] } = movieData || {};\n\t\tconst makeFavourite = Search && Search.length > 0 && Search.map((dVal) => {\n\t\t\tif (dVal.imdbID === id) {\n\t\t\t\treturn { ...dVal, isFavourite: value };\n\t\t\t}\n\t\t\treturn dVal;\n\t\t});\n\t\tsetMovieData({ ...movieData, Search: makeFavourite });\n\t}\n\treturn (\n\t\t<AppComponentContainer>\n\n\t\t\t<Router>\n\t\t\t\t<header>\n\t\t\t\t\t<Link to=\"/movie-search/\">\n\t\t\t\t\t\t<div className='home'>Home</div>\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Link to=\"/movie-search/favourites\">\n\t\t\t\t\t\t<div className='home'>Favourites</div>\n\t\t\t\t\t</Link>\n\t\t\t\t</header>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/movie-search/\" exact children={\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<div className=\"App\">\n\t\t\t\t\t\t\t\t<SearchComponent getData={getData} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<MovieList movieData={movieData} loading={loading} handleFavourite={handleFavourite} />\n\t\t\t\t\t\t</>\n\t\t\t\t\t} />\n\t\t\t\t\t<Route path=\"/movie-search/favourites\" exact children={<MovieList favourite={true} movieData={movieData} loading={loading} handleFavourite={handleFavourite} />} />\n\t\t\t\t\t<Route path=\"/movie-search/:id\" exact children={<MovieDetails movieData={movieData.Search} />} />\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t</AppComponentContainer>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}